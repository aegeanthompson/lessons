{"ast":null,"code":"var _jsxFileName = \"/Users/Gigibear/dev/SEIR-Stitch/unit_4/w11d04/student_examples/grapevine/app/javascript/components/Main.js\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n// =============================\n// DEPENDENCIES\n// =============================\n// packages\nimport React from 'react'; // components\n\nimport Post from './Post.js';\nimport Form from './Form.js'; // =============================\n// COMPONENT CLASS\n// =============================\n\nvar Main =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Main, _React$Component);\n\n  // ==============\n  // STATE\n  // ==============\n  function Main(_props) {\n    var _this;\n\n    _classCallCheck(this, Main);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Main).call(this, _props));\n\n    _this.fetchPosts = function () {\n      fetch('/api/posts').then(function (data) {\n        return data.json();\n      }).then(function (jData) {\n        _this.setState({\n          posts: jData\n        });\n      });\n    };\n\n    _this.handleCreate = function (createData) {\n      fetch('/api/posts', {\n        body: JSON.stringify(createData),\n        method: 'Post',\n        headers: {\n          'Accept': 'application/json, text/plain, */*',\n          'Content-Type': 'application/json'\n        }\n      }).then(function (createdPost) {\n        return createdPost.json();\n      }).then(function (jsonedPost) {\n        // take the user back to the index pageTitle\n        _assertThisInitialized(_this), props.handleView('home'); // update state with out new post\n\n        _this.setState(function (prevState) {\n          prevState.posts.push(jsonedPost);\n          return {\n            posts: prevState.posts\n          };\n        });\n      })[\"catch\"](function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.state = {\n      posts: []\n    };\n    return _this;\n  } // ==============\n  // HANDLERS\n  // ==============\n  // fetches all the data\n\n\n  _createClass(Main, [{\n    key: \"componentDidMount\",\n    // ==============\n    // LIFE CYCLES\n    // ==============\n    value: function componentDidMount() {\n      this.fetchPosts();\n    } // ==============\n    // RENDER\n    // ==============\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"main\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, this.props.view.pageTitle), this.props.view.page === 'home' ? this.state.posts.map(function (postData) {\n        return React.createElement(Post, {\n          key: postData.id,\n          postData: postData,\n          handleView: _this2.props.handleView,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        });\n      }) : React.createElement(Form, {\n        handleCreate: this.handleCreate,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }), this.state.posts.map(function (postData) {\n        return React.createElement(Post, {\n          key: postData.id,\n          postData: postData,\n          handleView: _this2.props.handleView,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        });\n      }));\n    }\n  }]);\n\n  return Main;\n}(React.Component); // =============================\n// EXPORT\n// =============================\n\n\nexport default Main;","map":{"version":3,"sources":["/Users/Gigibear/dev/SEIR-Stitch/unit_4/w11d04/student_examples/grapevine/app/javascript/components/Main.js"],"names":["React","Post","Form","Main","props","fetchPosts","fetch","then","data","json","jData","setState","posts","handleCreate","createData","body","JSON","stringify","method","headers","createdPost","jsonedPost","handleView","prevState","push","err","console","log","state","view","pageTitle","page","map","postData","id","Component"],"mappings":"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","sourcesContent":["// =============================\n// DEPENDENCIES\n// =============================\n// packages\nimport React from 'react'\n\n// components\nimport Post from './Post.js'\nimport Form from './Form.js'\n\n// =============================\n// COMPONENT CLASS\n// =============================\nclass Main extends React.Component {\n  // ==============\n  // STATE\n  // ==============\n  constructor(props) {\n    super(props)\n    this.state = {\n      posts: []\n    }\n  }\n\n  // ==============\n  // HANDLERS\n  // ==============\n  // fetches all the data\n  fetchPosts = () => {\n    fetch('/api/posts')\n    .then(data => data.json())\n    .then(jData => {\n      this.setState({ posts: jData })\n    })\n  }\n\n  // create new post\n  handleCreate = (createData) => {\n    fetch('/api/posts', {\n      body: JSON.stringify(createData),\n      method: 'Post',\n      headers: {\n        'Accept': 'application/json, text/plain, */*',\n        'Content-Type': 'application/json'\n      }\n    })\n      .then(createdPost => {\n        return createdPost.json()\n      })\n      .then(jsonedPost => {\n        // take the user back to the index pageTitle\n        this,props.handleView('home')\n        // update state with out new post\n        this.setState(prevState => {\n          prevState.posts.push(jsonedPost)\n          return { posts: prevState.posts }\n        })\n      })\n      .catch(err => console.log(err))\n  }\n\n  // ==============\n  // LIFE CYCLES\n  // ==============\n  componentDidMount() {\n    this.fetchPosts()\n  }\n\n  // ==============\n  // RENDER\n  // ==============\n  render () {\n    return (\n      <main>\n        <h1>{this.props.view.pageTitle}</h1>\n        { this.props.view.page === 'home'\n          ? this.state.posts.map((postData) => (\n              <Post\n                key={postData.id}\n                postData={postData}\n                handleView={this.props.handleView}\n              />\n            ))\n          : <Form handleCreate={this.handleCreate}/>\n        }\n        {this.state.posts.map((postData) => (\n          <Post\n            key={postData.id}\n            postData={postData}\n            handleView={this.props.handleView}\n          />\n        ))}\n      </main>\n    )\n  }\n}\n\n// =============================\n// EXPORT\n// =============================\nexport default Main\n"]},"metadata":{},"sourceType":"module"}